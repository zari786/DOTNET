@model CodeFirst.Models.Services

@{
    ViewBag.Title = "GetGroundHandling";
}

<div class="inner_page_about">
</div>

   

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div style="text-align:center; padding-top:10px">
            <h4 style="color:#0ca2cf !important;">Services Form</h4>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container-fluid">
            <div class="row">
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FlightNo, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.FlightNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FlightNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ArrivalRoute, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.ArrivalRoute, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ArrivalRoute, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RegistrationNo, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.RegistrationNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RegistrationNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ArrivalDestination, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.ArrivalDestination, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ArrivalDestination, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GroundHandling, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.GroundHandling)
                        @Html.ValidationMessageFor(model => model.GroundHandling, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid">
            <div class="row">
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MTOW, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.MTOW, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MTOW, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PassengerHandling, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.PassengerHandling, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PassengerHandling, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ATCFlightPlan, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.ATCFlightPlan, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ATCFlightPlan, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LoadingOffLoading, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.LoadingOffLoading, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LoadingOffLoading, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Catering, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Catering)
                        @Html.ValidationMessageFor(model => model.Catering, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid">
            <div class="row">
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NoOfPassenger, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.NoOfPassenger, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NoOfPassenger, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NoOfMeal, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.NoOfMeal, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NoOfMeal, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MealInformation, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.MealInformation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MealInformation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Refueling, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Refueling)
                        @Html.ValidationMessageFor(model => model.Refueling, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid">
            <div class="row">
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TypeOfFuel, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.TypeOfFuel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TypeOfFuel, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4"></div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OverFlyPermit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.OverFlyPermit)
                        @Html.ValidationMessageFor(model => model.OverFlyPermit, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid">
            <div class="row">
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Itenary, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Itenary, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Itenary, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EntryPoint, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.EntryPoint, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EntryPoint, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-xs-4 col-lg-4 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ExitPoint, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.ExitPoint, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ExitPoint, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group" >
                <div class="col-md-offset-2 col-md-10" style="padding-left:350px;">
                    <input type="submit" value="Get Services" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
    <body>
        <script src="~/Scripts/jquery-2.2.3.min.js"></script>
        <script src="~/Scripts/bootstrap.js"></script>
    </body>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
